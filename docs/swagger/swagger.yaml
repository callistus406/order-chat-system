openapi: 3.0.0
info:
  title: API Documentation
  description: API Documentation for User Management, Authentication, and Chat
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/v1
    description: Local development server

components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".

  schemas:
    ResponseDto:
      type: object
      properties:
        statusCode:
          type: integer
          example: 200
        message:
          type: string
          example: Request successful
        data:
          type: object
       

    RegisterAdminDto:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
          example: admin_user
        password:
          type: string
          example: Admin@123
        email:
          type: string
          format: email
          example: admin@example.com

    RegisterDto:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: Password@123
        username:
          type: string
          example: johndoe
      required:
        - email
        - password
        - username

    LoginDto:
      type: object
      properties:
        username:
          type: string
          # format: s
          example: admin
        password:
          type: string
          format: password
          example: admin@1234
      required:
        - email
        - password

    CloseChatDto:
      type: object
      properties:
        summary:
          type: string
          example: Chat session closed by admin
      required:
        - summary
  
    CreateOrderDto:
      type: object
      required:
        - description
        - specifications
        - quantity
      properties:
        description:
          type: string
          example: "proper  description"
        quantity:
          type: integer
          example: 2
        specifications:
          type: string
          example: Please deliver between 3-5 PM

    UpdateOrderDto:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - COMPLETED
            - CANCELED
          example: COMPLETED




security:
  - Bearer: []

tags:
  - name: Auth
    description: Endpoints for authentication
  - name: User Management
    description: Endpoints for managing users and admin accounts
  - name: Chat
    description: Endpoints for chat functionalities
  - name: Orders
    description: Endpoints for order functionalities

paths:
  
  /auth/sign-up:
    post:
      summary: Register a new user
      description: Creates a new user account with the provided credentials.
      tags:
        - Auth
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
      responses:
        '201':
          description: User registered successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid input.
        '500':
          description: Internal Server Error.

  /auth/sign-in:
    post:
      summary: User login
      description: Authenticates a user and returns an access token.
      tags:
        - Auth
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Login successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid credentials.
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error.
  /user/create-admin:
    post:
      summary: Create Admin Account
      description: Allows ADMIN to create a new admin account.
      tags:
        - User Management
      security:
        - Bearer: []
      requestBody:
        description: Admin user registration data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAdminDto'
      responses:
        '201':
          description: Admin user created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '403':
          description: Forbidden. Only ADMIN role can perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'

  
  /user/profile:
    get:
      summary: Get User Profile
      description: Fetch the profile of the authenticated user.
      tags:
        - User Management
      security:
        - Bearer: []
      responses:
        '200':
          description: Profile retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '401':
          description: Unauthorized. Invalid or missing token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'

  
  /user/accounts:
    get:
      summary: Get All Accounts
      description: Allows ADMIN to fetch all user accounts.
      tags:
        - User Management
      security:
        - Bearer: []
      responses:
        '200':
          description: Accounts retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '403':
          description: Forbidden. Only ADMIN role can perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '401':
          description: Unauthorized. Missing or invalid token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'


  
  

  /chat/{chatRoomId}/history:
    get:
      summary: Get Chat History
      description: Retrieve the history of a chat room.
      tags:
        - Chat
      security:
        - Bearer: []
      parameters:
        - name: chatRoomId
          in: path
          required: true
          description: ID of the chat room.
          schema:
            type: integer
      responses:
        '200':
          description: Chat history retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid chatRoomId.

  /chat/{chatRoomId}/close:
    post:
      summary: Close Chat Room
      description: Allows ADMIN to close a chat room.
      tags:
        - Chat
      security:
        - Bearer: []
      parameters:
        - name: chatRoomId
          in: path
          required: true
          description: ID of the chat room.
          schema:
            type: integer
      requestBody:
        description: Summary for closing chat room.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseChatDto'
      responses:
        '200':
          description: Chat room closed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '403':
          description: Forbidden. Only ADMIN role can perform this action.
  /order:
      post:
        summary: Create a new order
        description: Allows an authenticated user to create a new order.
        tags:
          - Orders
        security:
          - Bearer: []
        requestBody:
          description: Order creation data
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderDto'
        responses:
          '201':
            description: Order created successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDto'
          '401':
            description: Unauthorized. Token is invalid or missing.
          '400':
            description: Bad request. Invalid data provided.
          '403':
            description: Forbidden. Only USER role can perform this action.'
  /orders:
      get:
        summary: Get user orders
        description: Allows authenticated users to retrieve their order history.
        tags:
          - Orders
        security:
          - Bearer: []
        responses:
          '200':
            description: Orders retrieved successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDto'
          '401':
            description: Unauthorized. Token is invalid or missing.

  /admin/orders:
      get:
        summary: Get all orders (Admin)
        description: Allows admins to retrieve all orders in the system.
        tags:
          - Orders
        security:
          - Bearer: []
        responses:
          '200':
            description: Orders retrieved successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDto'
          '403':
            description: Forbidden. Only admins can access this endpoint.
          '401':
            description: Unauthorized. Token is invalid or missing.

  /admin/orders/{orderId}:
      get:
        summary: Get order by ID (Admin)
        description: Allows admins to fetch order details by ID.
        tags:
          - Orders
        security:
          - Bearer: []
        parameters:
          - name: orderId
            in: path
            required: true
            description: ID of the order.
            schema:
              type: integer
              example: 1
        responses:
          '200':
            description: Order details retrieved successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDto'
          '404':
            description: Order not found.
          '403':
            description: Forbidden. Only admins can access this endpoint.
          '401':
            description: Unauthorized. Token is invalid or missing.

  /order/{orderId}/status:
        patch:
          summary: Update order status (Admin)
          description: Allows admins to update the status of an order.
          tags:
            - Orders
          security:
            - Bearer: []
          parameters:
            - name: orderId
              in: path
              required: true
              description: ID of the order to update.
              schema:
                type: integer
                example: 1
          requestBody:
            description: Data to update the status of an order.
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateOrderDto'
          responses:
            '200':
              description: Order status updated successfully.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ResponseDto'
            '400':
              description: Invalid status provided.
            '403':
              description: Forbidden. Only admins can access this endpoint.
            '401':
              description: Unauthorized. Token is invalid or missing.

  